var searchIndex = JSON.parse('{\
"nodepm":{"doc":"Test?","t":[3,4,13,13,17,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,0,5,5],"n":["Cli","Commands","Init","Inspect","REGISTRY_HOST","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","fmt","from","from","from_arg_matches","from_arg_matches","has_subcommand","into","into","into_app","into_app","into_app_for_update","into_app_for_update","main","nodepm","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","verbose","force","path","project_name","project_name","version","package","project","inspect_package","init_project"],"q":["nodepm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nodepm::Commands","","","","","nodepm::nodepm","","nodepm::nodepm::package","nodepm::nodepm::project"],"d":["","","Initialize a new project (use “init –force” to …","Inspect a package","https://registry.npmjs.com","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Overwrite an existing project","The <code>path</code> to create a the project in. Defaults to the …","The name to add to the package.json file","","Package version [default: ‘latest’]","","","Query the <code>registry_host</code> for <code>package_name</code>, and return …","Create a new package.json file at <code>path</code> and set the name to …"],"i":[0,0,1,1,0,2,2,1,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,0,0,2,1,2,1,2,1,2,1,2,3,3,3,4,4,0,0,0,0],"f":[null,null,null,null,null,[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]],["result",4,[["error",3]]]],[[["argmatches",3]],["result",4,[["error",3]]]],[[["str",0]],["bool",0]],[[]],[[]],[[],["command",6]],[[],["command",6]],[[],["command",6]],[[],["command",6]],[[],["result",6]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["argmatches",3]],["result",4,[["error",3]]]],[[["",0],["argmatches",3]],["result",4,[["error",3]]]],null,null,null,null,null,null,null,null,[[["str",0],["str",0],["str",0]],["result",6]],[[["str",0],["pathbuf",3],["bool",0]],["result",6]]],"p":[[4,"Commands"],[3,"Cli"],[13,"Init"],[13,"Inspect"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};